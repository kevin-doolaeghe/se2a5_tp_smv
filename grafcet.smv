module main(e1,s1)
{
	input e1 : boolean;
	output s1 : boolean;
	x1,x2,x3,x4 : boolean;

	init(x1) := 1;
	init(x2) := 0;
	init(x3) := 0;
	init(x4) := 0;

	next(x1) := (x4 & ~e1) | (x1 & ~e1);
	next(x2) := (x1 & e1) | (x2 & e1);
	next(x3) := (x2 & ~e1) | (x3 & ~e1);
	next(x4) := (x3 & e1) | (x4 & e1);

	s1 := x2 | x3;

	securite_front : assert G ( (~e1 & X e1) -> F ( ~(s1 <-> X s1) ) );
}